#   ---------------------------------------
#   Git
#   ---------------------------------------
# Compact, colorized git log
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
# Visualise git log (like gitk, in the terminal)
alias lg='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'

alias ga="git add"
alias gb="git branch" #Git Branch
alias gc="git commit"
alias gd="git diff"
alias gg="git grep"
alias gs="git status"   #N.B. Overrides ghostscript (probably not important if you don't use it)
alias gsl='git shortlog -nsw -e'  #Who contributed how much

alias github="chrome \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`"
#Find a String in the Entire Git History
alias gitsearch='git rev-list --all | xargs git grep -F'
alias git-count-commits="git log --pretty=format:'' | wc -l"    #Git Count Comits
alias geg="git config -e"    #Edit git config
alias gru="git status --porcelain | grep -o '^??.*$' | cut -d' ' -f2 | xargs rm -riv" #Remove git untracked files
alias gamend="git commit --amend -m"   #Git amend latest commit message
alias grefresh="git checkout master && cleanupDS && git pull && git fetch -p"
alias gbranchprune="git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d"


#git work done
workdone(){
    default="1 day ago"
    git log --committer=aavnsh --pretty=format:"%Cgreen%ar (%h)%n%Creset> %s %b%n" --since="${1:-$default}" --no-merges
}

parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

parse_git_branch_v2() {
    # The above version works well when you are not on a git proj folder - this version only works if u r in the proj folder
    git symbolic-ref --short -q HEAD
}
# This script defines a command to find the Github
# link to the Pull Request that merged in the target commit.
gitpr() {
    COMMIT=$(
       git log \
              --merges \
                 --grep="Merge pull request" \
                --ancestry-path $1~..HEAD \
                   --pretty=format:%H | \
                      tail -n1
    )
    PULL=$(
           git show $COMMIT --pretty=oneline | \
                  sed "s/.*#\([0-9]*\).*/\1/g"
        )
    URL=$(
           git config --get remote.origin.url | \
                  sed "s/\(.*\).git/\1\/pull\/$PULL/g"
            )
             git show $COMMIT;
              echo $URL;
}

gitzip() {
  git archive -o $(basename $PWD).zip HEAD
}

gittgz() {
  git archive -o $(basename $PWD).tgz HEAD
}

gitdiffb() {
  if [ $# -ne 2 ]; then
    echo two branch names required
    return
  fi
  git log --graph \
  --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' \
  --abbrev-commit --date=relative $1..$2
}